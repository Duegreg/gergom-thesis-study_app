type User {
    id: ID!
    code: String!
    name: String!
    studentGroups: [Group!]
    teacherGroups: [Group!]
    followedStudents: [User!]
    userTestStatuses: [UserTestStatus!]
}

type Group {
    id: ID!
    code: String!
    name: String!
    description: String
    news: String
    newsChangedDate: String
    students: [User!]
    teachers: [User!]
    tests: [Test!]
}

type Test {
    id: ID!
    name: String!
    description: String
    allTasks: Int!
    testTasks: [TestTask!]
    userTestStatuses: [UserTestStatus!]
    group: Group!
}

type UserTestStatus {
    id: ID!
    test: Test!
    user: User!
    status: String!
    statusChangedTime: String!
    correctSolutions: Int!
    allSolutions: Int!
    solvedTasks: Int!
    userTestTaskStatuses: [UserTestTaskStatus!]
}

type Task {
    id: ID!
    usage: Int!
    question: String!
    answers: [TaskAnswer!]!
    solutionNumber: Int!
}

type TaskAnswer {
    number: Int!
    answer: String!
}

type TaskSolution {
    chosenAnswerNumber: Int!
    solutionNumber: Int!
    allSolutions: Int!
    correctSolutions: Int!
    solvedTasks: Int!
    allTasks: Int!
}

type TaskSearchResult {
    totalPages: Int!
    totalElements: Int!
    tasks: [Task!]
}

type TestTask {
    id: ID!
    level: Int!
    allSolutions: Int!
    correctSolutions: Int!
    task: Task!
}

type UserTestTaskStatus {
    testTask: TestTask!
    lastSolutionTime: String!
    correctSolutions: Int!
    allSolutions: Int!
}

input TestTaskInput {
    id: ID!
    level: Int!
}

input TaskInput {
    question: String!
    correctAnswer: String!
    incorrectAnswers: [String!]!
}

input NameDescInput {
    name: String!
    description: String!
}